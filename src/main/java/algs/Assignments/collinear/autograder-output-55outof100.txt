See the Assessment Guide for information on how to interpret this report.

ASSESSMENT SUMMARY

Compilation:  PASSED
API:          PASSED

SpotBugs:     PASSED
PMD:          FAILED (2 warnings)
Checkstyle:   PASSED

Correctness:  20/41 tests passed
Memory:       1/1 tests passed
Timing:       10/41 tests passed

Aggregate score: 54.15%
[Compilation: 5%, API: 5%, SpotBugs: 0%, PMD: 0%, Checkstyle: 0%, Correctness: 60%, Memory: 10%, Timing: 20%]

ASSESSMENT DETAILS

The following files were submitted:
----------------------------------
3.6K Jan 17 04:52 BruteCollinearPoints.java
2.0K Jan 17 04:52 FastCollinearPoints.java
5.2K Jan 17 04:52 Point.java


********************************************************************************
*  COMPILING                                                                    
********************************************************************************


% javac Point.java
*-----------------------------------------------------------

% javac LineSegment.java
*-----------------------------------------------------------

% javac BruteCollinearPoints.java
*-----------------------------------------------------------

% javac FastCollinearPoints.java
*-----------------------------------------------------------


================================================================


Checking the APIs of your programs.
*-----------------------------------------------------------
Point:

BruteCollinearPoints:

FastCollinearPoints:

================================================================


********************************************************************************
*  CHECKING STYLE AND COMMON BUG PATTERNS                                       
********************************************************************************


% spotbugs *.class
*-----------------------------------------------------------


================================================================


% pmd .
*-----------------------------------------------------------
BruteCollinearPoints.java:13: The private instance (or static) variable 'points' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
BruteCollinearPoints.java:14: The private instance (or static) variable 'lineSegments' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
PMD ends with 2 warnings.


================================================================


% checkstyle *.java
*-----------------------------------------------------------

% custom checkstyle checks for Point.java
*-----------------------------------------------------------

% custom checkstyle checks for BruteCollinearPoints.java
*-----------------------------------------------------------

% custom checkstyle checks for FastCollinearPoints.java
*-----------------------------------------------------------


================================================================


********************************************************************************
*  TESTING CORRECTNESS
********************************************************************************

Testing correctness of Point
*-----------------------------------------------------------
Running 3 total tests.

Test 1: p.slopeTo(q)
  * positive infinite slope, where p and q have coordinates in [0, 500)
  * positive infinite slope, where p and q have coordinates in [0, 32768)
  * negative infinite slope, where p and q have coordinates in [0, 500)
  * negative infinite slope, where p and q have coordinates in [0, 32768)
  * positive zero     slope, where p and q have coordinates in [0, 500)
  * positive zero     slope, where p and q have coordinates in [0, 32768)
  * symmetric for random points p and q with coordinates in [0, 500)
  * symmetric for random points p and q with coordinates in [0, 32768)
  * transitive for random points p, q, and r with coordinates in [0, 500)
  * transitive for random points p, q, and r with coordinates in [0, 32768)
  * slopeTo(), where p and q have coordinates in [0, 500)
  * slopeTo(), where p and q have coordinates in [0, 32768)
  * slopeTo(), where p and q have coordinates in [0, 10)
  * throw a java.lang.NullPointerException if argument is null
==> passed

Test 2: p.compareTo(q)
  * reflexive, where p and q have coordinates in [0, 500)
  * reflexive, where p and q have coordinates in [0, 32768)
  * antisymmetric, where p and q have coordinates in [0, 500)
  * antisymmetric, where p and q have coordinates in [0, 32768)
  * transitive, where p, q, and r have coordinates in [0, 500)
  * transitive, where p, q, and r have coordinates in [0, 32768)
  * sign of compareTo(), where p and q have coordinates in [0, 500)
  * sign of compareTo(), where p and q have coordinates in [0, 32768)
  * sign of compareTo(), where p and q have coordinates in [0, 10)
  * throw java.lang.NullPointerException exception if argument is null
==> passed

Test 3: p.slopeOrder().compare(q, r)
  * reflexive, where p and q have coordinates in [0, 500)
  * reflexive, where p and q have coordinates in [0, 32768)
  * antisymmetric, where p, q, and r have coordinates in [0, 500)
  * antisymmetric, where p, q, and r have coordinates in [0, 32768)
  * transitive, where p, q, r, and s have coordinates in [0, 500)
  * transitive, where p, q, r, and s have coordinates in [0, 32768)
  * sign of compare(), where p, q, and r have coordinates in [0, 500)
  * sign of compare(), where p, q, and r have coordinates in [0, 32768)
  * sign of compare(), where p, q, and r have coordinates in [0, 10)
  * throw java.lang.NullPointerException if either argument is null
==> passed


Total: 3/3 tests passed!


================================================================
********************************************************************************
*  TESTING CORRECTNESS (substituting reference Point and LineSegment)
********************************************************************************

Testing correctness of BruteCollinearPoints
*-----------------------------------------------------------
Running 17 total tests.

The inputs satisfy the following conditions:
  - no duplicate points
  - no 5 (or more) points are collinear
  - all x- and y-coordinates between 0 and 32,767

Test 1: points from a file
  * filename = input8.txt
  * filename = equidistant.txt
  * filename = input40.txt
  * filename = input48.txt
==> passed

Test 2a: points from a file with horizontal line segments
  * filename = horizontal5.txt
  * filename = horizontal25.txt
==> passed

Test 2b: random horizontal line segments
  *  1 random horizontal line segment
  *  5 random horizontal line segments
  * 10 random horizontal line segments
  * 15 random horizontal line segments
==> passed

Test 3a: points from a file with vertical line segments
  * filename = vertical5.txt
  * filename = vertical25.txt
==> passed

Test 3b: random vertical line segments
  *  1 random vertical line segment
  *  5 random vertical line segments
  * 10 random vertical line segments
  * 15 random vertical line segments
==> passed

Test 4a: points from a file with no line segments
  * filename = random23.txt
  * filename = random38.txt
==> passed

Test 4b: random points with no line segments
  *  5 random points
  * 10 random points
  * 20 random points
  * 50 random points
==> passed

Test 5: points from a file with fewer than 4 points
  * filename = input1.txt
  * filename = input2.txt
  * filename = input3.txt
==> passed

Test 6: check for dependence on either compareTo() or compare()
        returning { -1, +1, 0 } instead of { negative integer,
        positive integer, zero }
  * filename = equidistant.txt
  * filename = input40.txt
  * filename = input48.txt
==> passed

Test 7: check for fragile dependence on return value of toString()
  * filename = equidistant.txt
  * filename = input40.txt
  * filename = input48.txt
==> passed

Test 8: random line segments, none vertical or horizontal
  *  1 random line segment
  *  5 random line segments
  * 10 random line segments
  * 15 random line segments
==> passed

Test 9: random line segments
  *  1 random line segment
  *  5 random line segments
  * 10 random line segments
  * 15 random line segments
==> passed

Test 10: check that data type is immutable by testing whether each method
         returns the same value, regardless of any intervening operations
  * input8.txt
  * equidistant.txt
==> passed

Test 11: check that data type does not mutate the constructor argument
  * input8.txt
  * equidistant.txt
==> passed

Test 12: numberOfSegments() is consistent with segments()
  * filename = input8.txt
  * filename = equidistant.txt
  * filename = input40.txt
  * filename = input48.txt
  * filename = horizontal5.txt
  * filename = vertical5.txt
  * filename = random23.txt
==> passed

Test 13: throws an exception if either the constructor argument is null
         or any entry in array is null
  * argument is null
  * Point[] of length 10, number of null entries = 1
  * Point[] of length 10, number of null entries = 10
  * Point[] of length 4, number of null entries = 1
  * Point[] of length 3, number of null entries = 1
  * Point[] of length 2, number of null entries = 1
  * Point[] of length 1, number of null entries = 1
==> passed

Test 14: check that the constructor throws an exception if duplicate points
  * 50 points
  * 25 points
  * 5 points
  * 4 points
  * 3 points
  * 2 points
==> passed


Total: 17/17 tests passed!


================================================================
Testing correctness of FastCollinearPoints
*-----------------------------------------------------------
Running 21 total tests.

The inputs satisfy the following conditions:
  - no duplicate points
  - all x- and y-coordinates between 0 and 32,767

Test 1: points from a file
  * filename = input8.txt
[(10000, 0) -> (0, 10000), (3000, 4000) -> (20000, 21000), (10000, 0) -> (0, 10000), (10000, 0) -> (0, 10000), (10000, 0) -> (0, 10000), (3000, 4000) -> (20000, 21000), (10000, 0) -> (0, 10000), (3000, 4000) -> (20000, 21000)]
    - segments() contains the same segment more than once
    - segment 0: (10000, 0) -> (0, 10000)
    - segment 2: (10000, 0) -> (0, 10000)

    - number of entries in student   solution: 8
    - number of entries in reference solution: 2
    - 6 extra entries in student solution, including:
      '(3000, 4000) -> (20000, 21000)'


  * filename = equidistant.txt
[(10000, 0) -> (0, 10000), (10000, 0) -> (30000, 0), (13000, 0) -> (5000, 12000), (30000, 0) -> (0, 30000), (13000, 0) -> (5000, 12000), (13000, 0) -> (5000, 12000), (13000, 0) -> (5000, 12000), (10000, 0) -> (30000, 0), (10000, 0) -> (0, 10000), (30000, 0) -> (0, 30000), (10000, 0) -> (30000, 0), (13000, 0) -> (5000, 12000), (10000, 0) -> (0, 10000), (10000, 0) -> (30000, 0), (13000, 0) -> (5000, 12000), (10000, 0) -> (0, 10000), (10000, 0) -> (30000, 0)]
    - segments() contains the same segment more than once
    - segment 2: (13000, 0) -> (5000, 12000)
    - segment 4: (13000, 0) -> (5000, 12000)

    - number of entries in student   solution: 17
    - number of entries in reference solution: 4
    - 13 extra entries in student solution, including:
      '(30000, 0) -> (0, 30000)'


  * filename = input40.txt
[(1000, 17000) -> (29000, 17000), (2000, 24000) -> (25000, 24000), (1000, 17000) -> (1000, 31000), (1000, 17000) -> (1000, 31000), (1000, 17000) -> (1000, 31000), (2000, 24000) -> (25000, 24000), (1000, 17000) -> (29000, 17000), (1000, 17000) -> (29000, 17000), (1000, 17000) -> (29000, 17000), (1000, 17000) -> (29000, 17000), (2000, 24000) -> (25000, 24000), (1000, 17000) -> (29000, 17000)]
    - segments() contains the same segment more than once
    - segment 2: (1000, 17000) -> (1000, 31000)
    - segment 3: (1000, 17000) -> (1000, 31000)

    - number of entries in student   solution: 12
    - number of entries in reference solution: 4
    - 9 extra entries in student solution, including:
      '(2000, 24000) -> (25000, 24000)'

    - 1 missing entry in student solution:
      '(2000, 29000) -> (4000, 29000) -> (22000, 29000) -> (28000, 29000)'


  * filename = input48.txt
[(6000, 2000) -> (19000, 28000), (1000, 26000) -> (18000, 26000), (1000, 2000) -> (1000, 26000), (9000, 1000) -> (16000, 22000), (1000, 23000) -> (24000, 23000), (9000, 1000) -> (16000, 22000), (1000, 23000) -> (24000, 23000), (9000, 1000) -> (16000, 22000), (1000, 26000) -> (18000, 26000), (1000, 2000) -> (1000, 26000), (1000, 23000) -> (24000, 23000), (1000, 2000) -> (1000, 26000), (1000, 23000) -> (24000, 23000), (18000, 13000) -> (18000, 27000), (1000, 23000) -> (24000, 23000), (18000, 13000) -> (18000, 27000), (1000, 2000) -> (1000, 26000), (1000, 26000) -> (18000, 26000), (6000, 2000) -> (19000, 28000), (18000, 13000) -> (18000, 27000), (1000, 2000) -> (1000, 26000), (1000, 26000) -> (18000, 26000), (6000, 2000) -> (19000, 28000), (18000, 13000) -> (18000, 27000), (6000, 2000) -> (19000, 28000), (9000, 1000) -> (16000, 22000), (1000, 26000) -> (18000, 26000), (6000, 2000) -> (19000, 28000), (18000, 13000) -> (18000, 27000), (6000, 2000) -> (19000, 28000), (18000, 13000) -> (18000, 27000), (9000, 1000) -> (16000, 22000)]
    - segments() contains the same segment more than once
    - segment 3: (9000, 1000) -> (16000, 22000)
    - segment 5: (9000, 1000) -> (16000, 22000)

    - number of entries in student   solution: 32
    - number of entries in reference solution: 6
    - 26 extra entries in student solution, including:
      '(1000, 26000) -> (18000, 26000)'


  * filename = input299.txt
[(1650, 2050) -> (28350, 15400), (2950, 200) -> (2950, 25400), (2950, 200) -> (2950, 25400), (2950, 200) -> (2950, 25400), (2950, 200) -> (2950, 25400), (1650, 2050) -> (28350, 15400), (2950, 200) -> (2950, 25400), (2950, 200) -> (2950, 25400), (31000, 500) -> (21900, 9600), (7300, 10050) -> (7300, 31650), (31000, 500) -> (21900, 9600), (31000, 500) -> (21900, 9600), (23000, 8500) -> (30950, 8500), (1650, 2050) -> (28350, 15400), (23000, 8500) -> (30950, 8500), (3250, 17450) -> (17250, 17450), (23000, 8500) -> (30950, 8500), (3250, 17450) -> (17250, 17450), (3250, 17450) -> (17250, 17450), (3250, 17450) -> (17250, 17450), (3250, 17450) -> (17250, 17450), (2950, 200) -> (2950, 25400), (2950, 200) -> (2950, 25400), (7300, 10050) -> (7300, 31650), (7300, 10050) -> (7300, 31650), (1650, 2050) -> (28350, 15400), (3250, 17450) -> (17250, 17450), (2950, 200) -> (2950, 25400), (2950, 200) -> (2950, 25400), (2950, 200) -> (2950, 25400), (7300, 10050) -> (7300, 31650), (1650, 2050) -> (28350, 15400), (7300, 10050) -> (7300, 31650), (2950, 200) -> (2950, 25400), (2950, 200) -> (2950, 25400), (2950, 200) -> (2950, 25400), (2950, 200) -> (2950, 25400), (2950, 200) -> (2950, 25400), (2950, 200) -> (2950, 25400)]
    - segments() contains the same segment more than once
    - segment 1: (2950, 200) -> (2950, 25400)
    - segment 2: (2950, 200) -> (2950, 25400)

    - number of entries in student   solution: 39
    - number of entries in reference solution: 6
    - 33 extra entries in student solution, including:
      '(3250, 17450) -> (17250, 17450)'


==> FAILED

Test 2a: points from a file with horizontal line segments
  * filename = horizontal5.txt
[(4750, 4652) -> (16307, 4652), (2682, 14118) -> (7821, 14118), (4750, 4652) -> (16307, 4652), (1888, 7657) -> (13832, 7657), (4750, 4652) -> (16307, 4652), (8934, 7996) -> (20547, 7996), (1888, 7657) -> (13832, 7657), (2682, 14118) -> (7821, 14118), (1888, 7657) -> (13832, 7657), (1888, 7657) -> (13832, 7657), (8934, 7996) -> (20547, 7996), (1888, 7657) -> (13832, 7657), (10375, 12711) -> (20385, 12711), (4750, 4652) -> (16307, 4652), (10375, 12711) -> (20385, 12711), (8934, 7996) -> (20547, 7996), (10375, 12711) -> (20385, 12711), (4750, 4652) -> (16307, 4652), (8934, 7996) -> (20547, 7996), (4750, 4652) -> (16307, 4652)]
    - segments() contains the same segment more than once
    - segment 0: (4750, 4652) -> (16307, 4652)
    - segment 2: (4750, 4652) -> (16307, 4652)

    - number of entries in student   solution: 20
    - number of entries in reference solution: 5
    - 15 extra entries in student solution, including:
      '(2682, 14118) -> (7821, 14118)'


  * filename = horizontal25.txt
[(10021, 1256) -> (19615, 1256), (8784, 20913) -> (19666, 20913), (10021, 1256) -> (19615, 1256), (1694, 10494) -> (9815, 10494), (2760, 18242) -> (8748, 18242), (10021, 1256) -> (19615, 1256), (6268, 18593) -> (19710, 18593), (1697, 2986) -> (15748, 2986), (6268, 18593) -> (19710, 18593), (12774, 15282) -> (20732, 15282), (10021, 1256) -> (19615, 1256), (5220, 20333) -> (20780, 20333), (10021, 1256) -> (19615, 1256), (2387, 13497) -> (19135, 13497), (12774, 15282) -> (20732, 15282), (2387, 13497) -> (19135, 13497), (2893, 8542) -> (20545, 8542), (12774, 15282) -> (20732, 15282), (6268, 18593) -> (19710, 18593), (12774, 15282) -> (20732, 15282), (6268, 18593) -> (19710, 18593), (7106, 12401) -> (19870, 12401), (2841, 16561) -> (11738, 16561), (7106, 12401) -> (19870, 12401), (2760, 18242) -> (8748, 18242), (2893, 8542) -> (20545, 8542), (2841, 16561) -> (11738, 16561), (5220, 20333) -> (20780, 20333), (2760, 18242) -> (8748, 18242), (10141, 14510) -> (20724, 14510), (2841, 16561) -> (11738, 16561), (2214, 6631) -> (19618, 6631), (5220, 20333) -> (20780, 20333), (2893, 8542) -> (20545, 8542), (7577, 17772) -> (14099, 17772), (6268, 18593) -> (19710, 18593), (2893, 8542) -> (20545, 8542), (6268, 18593) -> (19710, 18593), (10926, 11533) -> (16281, 11533), (2566, 13870) -> (19459, 13870), (3522, 16433) -> (17243, 16433), (7106, 12401) -> (19870, 12401), (2978, 16594) -> (20953, 16594), (3467, 11600) -> (19296, 11600), (2978, 16594) -> (20953, 16594), (7106, 12401) -> (19870, 12401), (2387, 13497) -> (19135, 13497), (2387, 13497) -> (19135, 13497), (2387, 13497) -> (19135, 13497), (2566, 13870) -> (19459, 13870), (2387, 13497) -> (19135, 13497), (2566, 13870) -> (19459, 13870), (7106, 12401) -> (19870, 12401), (2566, 13870) -> (19459, 13870), (2411, 12258) -> (11636, 12258), (2566, 13870) -> (19459, 13870), (2411, 12258) -> (11636, 12258), (2566, 13870) -> (19459, 13870), (2411, 12258) -> (11636, 12258), (12774, 15282) -> (20732, 15282), (6825, 10208) -> (11139, 10208), (12774, 15282) -> (20732, 15282), (4973, 7917) -> (17546, 7917), (6268, 18593) -> (19710, 18593), (6825, 10208) -> (11139, 10208), (12774, 15282) -> (20732, 15282), (6825, 10208) -> (11139, 10208), (2566, 13870) -> (19459, 13870), (6825, 10208) -> (11139, 10208), (3522, 16433) -> (17243, 16433), (1694, 10494) -> (9815, 10494), (12774, 15282) -> (20732, 15282), (6268, 18593) -> (19710, 18593), (5172, 4642) -> (20727, 4642), (5220, 20333) -> (20780, 20333), (1694, 10494) -> (9815, 10494), (7300, 17394) -> (16910, 17394), (6825, 10208) -> (11139, 10208), (3522, 16433) -> (17243, 16433), (2411, 12258) -> (11636, 12258), (6825, 10208) -> (11139, 10208), (2978, 16594) -> (20953, 16594), (10926, 11533) -> (16281, 11533), (6825, 10208) -> (11139, 10208), (8784, 20913) -> (19666, 20913), (6825, 10208) -> (11139, 10208), (1697, 2986) -> (15748, 2986), (2760, 18242) -> (8748, 18242), (4973, 7917) -> (17546, 7917), (2841, 16561) -> (11738, 16561), (2893, 8542) -> (20545, 8542), (7300, 17394) -> (16910, 17394), (2893, 8542) -> (20545, 8542), (2760, 18242) -> (8748, 18242), (2893, 8542) -> (20545, 8542), (5220, 20333) -> (20780, 20333), (6825, 10208) -> (11139, 10208), (7300, 17394) -> (16910, 17394), (2214, 6631) -> (19618, 6631), (5220, 20333) -> (20780, 20333)]
    - segments() contains the same segment more than once
    - segment 0: (10021, 1256) -> (19615, 1256)
    - segment 2: (10021, 1256) -> (19615, 1256)

    - number of entries in student   solution: 100
    - number of entries in reference solution: 25
    - 75 extra entries in student solution, including:
      '(8784, 20913) -> (19666, 20913)'


  * filename = horizontal50.txt
[(2624, 1040) -> (15579, 1040), (2551, 9661) -> (20475, 9661), (2271, 18213) -> (18486, 18213), (2551, 9661) -> (20475, 9661), (1947, 15175) -> (16628, 15175), (2066, 12180) -> (10442, 12180), (1748, 18611) -> (9303, 18611), (2066, 12180) -> (10442, 12180), (3525, 1850) -> (16587, 1850), (1947, 15175) -> (16628, 15175), (3525, 1850) -> (16587, 1850), (2066, 12180) -> (10442, 12180), (2230, 6356) -> (13115, 6356), (2147, 8892) -> (16919, 8892), (6095, 3120) -> (19909, 3120), (3064, 20684) -> (16150, 20684), (6113, 3095) -> (14847, 3095), (3189, 18152) -> (9886, 18152), (6415, 3163) -> (16367, 3163), (3064, 20684) -> (16150, 20684), (7684, 3141) -> (14657, 3141), (2271, 18213) -> (18486, 18213), (7430, 7696) -> (17259, 7696), (2271, 18213) -> (18486, 18213), (7430, 7696) -> (17259, 7696), (4218, 18014) -> (12107, 18014), (7992, 5167) -> (16729, 5167), (4218, 18014) -> (12107, 18014), (7430, 7696) -> (17259, 7696), (1947, 15175) -> (16628, 15175), (8171, 7118) -> (17135, 7118), (3189, 18152) -> (9886, 18152), (7430, 7696) -> (17259, 7696), (1622, 9333) -> (20455, 9333), (2271, 18213) -> (18486, 18213), (2028, 1783) -> (18095, 1783), (2066, 12180) -> (10442, 12180), (8013, 3745) -> (17671, 3745), (3648, 13133) -> (15334, 13133), (4351, 17335) -> (13505, 17335), (7199, 3628) -> (14313, 3628), (1947, 15175) -> (16628, 15175), (8029, 1826) -> (14525, 1826), (5493, 16281) -> (14705, 16281), (8171, 7118) -> (17135, 7118), (1947, 15175) -> (16628, 15175), (2496, 3034) -> (16744, 3034), (4218, 18014) -> (12107, 18014), (5566, 10011) -> (19363, 10011), (7992, 5167) -> (16729, 5167), (3064, 20684) -> (16150, 20684), (2496, 3034) -> (16744, 3034), (8013, 3745) -> (17671, 3745), (8171, 7118) -> (17135, 7118), (8029, 1826) -> (14525, 1826), (12141, 5942) -> (19921, 5942), (2271, 18213) -> (18486, 18213), (5566, 10011) -> (19363, 10011), (6095, 3120) -> (19909, 3120), (3189, 18152) -> (9886, 18152), (3525, 1850) -> (16587, 1850), (6030, 16537) -> (20310, 16537), (3064, 20684) -> (16150, 20684), (4850, 9254) -> (17739, 9254), (6095, 3120) -> (19909, 3120), (3064, 20684) -> (16150, 20684), (12141, 5942) -> (19921, 5942), (3525, 1850) -> (16587, 1850), (6437, 11841) -> (20192, 11841), (1748, 18611) -> (9303, 18611), (9037, 9809) -> (20603, 9809), (12141, 5942) -> (19921, 5942), (3189, 18152) -> (9886, 18152), (9937, 1159) -> (17792, 1159), (3914, 3287) -> (16379, 3287), (3189, 18152) -> (9886, 18152), (3914, 3287) -> (16379, 3287), (3648, 13133) -> (15334, 13133), (7992, 5167) -> (16729, 5167), (2271, 18213) -> (18486, 18213), (6095, 3120) -> (19909, 3120), (1748, 18611) -> (9303, 18611), (6415, 3163) -> (16367, 3163), (9037, 9809) -> (20603, 9809), (6300, 7218) -> (17289, 7218), (1947, 15175) -> (16628, 15175), (2147, 8892) -> (16919, 8892), (8171, 7118) -> (17135, 7118), (2735, 14194) -> (13957, 14194), (4850, 9254) -> (17739, 9254), (6437, 11841) -> (20192, 11841), (12141, 5942) -> (19921, 5942), (1947, 15175) -> (16628, 15175), (12141, 5942) -> (19921, 5942), (3454, 13746) -> (18773, 13746), (10849, 10556) -> (19201, 10556), (1622, 9333) -> (20455, 9333), (10849, 10556) -> (19201, 10556), (9037, 9809) -> (20603, 9809), (5566, 10011) -> (19363, 10011), (1622, 9333) -> (20455, 9333), (10849, 10556) -> (19201, 10556), (2551, 9661) -> (20475, 9661), (5566, 10011) -> (19363, 10011), (9037, 9809) -> (20603, 9809), (2551, 9661) -> (20475, 9661), (9037, 9809) -> (20603, 9809), (1341, 8976) -> (7683, 8976), (10849, 10556) -> (19201, 10556), (1341, 8976) -> (7683, 8976), (10340, 11518) -> (15497, 11518), (10849, 10556) -> (19201, 10556), (10340, 11518) -> (15497, 11518), (5566, 10011) -> (19363, 10011), (6437, 11841) -> (20192, 11841), (12567, 11991) -> (19205, 11991), (6437, 11841) -> (20192, 11841), (2230, 6356) -> (13115, 6356), (5566, 10011) -> (19363, 10011), (1622, 9333) -> (20455, 9333), (12567, 11991) -> (19205, 11991), (6300, 7218) -> (17289, 7218), (10340, 11518) -> (15497, 11518), (12043, 14089) -> (20016, 14089), (2028, 1783) -> (18095, 1783), (12043, 14089) -> (20016, 14089), (5566, 10011) -> (19363, 10011), (6650, 13861) -> (18679, 13861), (2624, 1040) -> (15579, 1040), (9037, 9809) -> (20603, 9809), (2230, 6356) -> (13115, 6356), (12043, 14089) -> (20016, 14089), (2271, 18213) -> (18486, 18213), (3525, 1850) -> (16587, 1850), (2271, 18213) -> (18486, 18213), (10340, 11518) -> (15497, 11518), (7430, 7696) -> (17259, 7696), (10701, 17481) -> (19160, 17481), (6113, 3095) -> (14847, 3095), (9037, 9809) -> (20603, 9809), (7992, 5167) -> (16729, 5167), (2624, 1040) -> (15579, 1040), (1947, 15175) -> (16628, 15175), (2028, 1783) -> (18095, 1783), (2735, 14194) -> (13957, 14194), (10701, 17481) -> (19160, 17481), (9037, 9809) -> (20603, 9809), (2028, 1783) -> (18095, 1783), (2551, 9661) -> (20475, 9661), (6437, 11841) -> (20192, 11841), (5249, 20754) -> (17428, 20754), (12141, 5942) -> (19921, 5942), (2624, 1040) -> (15579, 1040), (11973, 17473) -> (16560, 17473), (8029, 1826) -> (14525, 1826), (9037, 9809) -> (20603, 9809), (7992, 5167) -> (16729, 5167), (11973, 17473) -> (16560, 17473), (7199, 3628) -> (14313, 3628), (1622, 9333) -> (20455, 9333), (7199, 3628) -> (14313, 3628), (1947, 15175) -> (16628, 15175), (6415, 3163) -> (16367, 3163), (8171, 7118) -> (17135, 7118), (6095, 3120) -> (19909, 3120), (11973, 17473) -> (16560, 17473), (9037, 9809) -> (20603, 9809), (2624, 1040) -> (15579, 1040), (3914, 3287) -> (16379, 3287), (10701, 17481) -> (19160, 17481), (6113, 3095) -> (14847, 3095), (4218, 18014) -> (12107, 18014), (6415, 3163) -> (16367, 3163), (11973, 17473) -> (16560, 17473), (2066, 12180) -> (10442, 12180), (2735, 14194) -> (13957, 14194), (10340, 11518) -> (15497, 11518), (2230, 6356) -> (13115, 6356), (8101, 19912) -> (12474, 19912), (4218, 18014) -> (12107, 18014), (2624, 1040) -> (15579, 1040), (4218, 18014) -> (12107, 18014), (2624, 1040) -> (15579, 1040), (5493, 16281) -> (14705, 16281), (8029, 1826) -> (14525, 1826), (7199, 3628) -> (14313, 3628), (8101, 19912) -> (12474, 19912), (4850, 9254) -> (17739, 9254), (6113, 3095) -> (14847, 3095), (2735, 14194) -> (13957, 14194), (9037, 9809) -> (20603, 9809), (8013, 3745) -> (17671, 3745), (5566, 10011) -> (19363, 10011), (8029, 1826) -> (14525, 1826), (4218, 18014) -> (12107, 18014), (8029, 1826) -> (14525, 1826), (6030, 16537) -> (20310, 16537), (2624, 1040) -> (15579, 1040), (6030, 16537) -> (20310, 16537), (6113, 3095) -> (14847, 3095)]
    - segments() contains the same segment more than once
    - segment 1: (2551, 9661) -> (20475, 9661)
    - segment 3: (2551, 9661) -> (20475, 9661)

    - number of entries in student   solution: 200
    - number of entries in reference solution: 50
    - 151 extra entries in student solution, including:
      '(3064, 20684) -> (16150, 20684)'

    - 1 missing entry in student solution:
      '(8643, 18776) -> (13201, 18776) -> (18979, 18776) -> (19621, 18776)'


  * filename = horizontal75.txt
[(7903, 1061) -> (20959, 1061), (1707, 17944) -> (16032, 17944), (7903, 1061) -> (20959, 1061), (1313, 19055) -> (11742, 19055), (7903, 1061) -> (20959, 1061), (6544, 14630) -> (9489, 14630), (5673, 19457) -> (19304, 19457), (1328, 1862) -> (13080, 1862), (1536, 20976) -> (14591, 20976), (2547, 12628) -> (13795, 12628), (1328, 1862) -> (13080, 1862), (7903, 1061) -> (20959, 1061), (2547, 12628) -> (13795, 12628), (6544, 14630) -> (9489, 14630), (7903, 1061) -> (20959, 1061), (4050, 16819) -> (15932, 16819), (7903, 1061) -> (20959, 1061), (4050, 16819) -> (15932, 16819), (1328, 1862) -> (13080, 1862), (5673, 19457) -> (19304, 19457), (6210, 5834) -> (7378, 5834), (4301, 14436) -> (11808, 14436), (9154, 2478) -> (17129, 2478), (4141, 16975) -> (15611, 16975), (3705, 1787) -> (15690, 1787), (6544, 14630) -> (9489, 14630), (10547, 6281) -> (20106, 6281), (1313, 19055) -> (11742, 19055), (2852, 8128) -> (20123, 8128), (10547, 6281) -> (20106, 6281), (6544, 14630) -> (9489, 14630), (3014, 1579) -> (13040, 1579), (1547, 9420) -> (11331, 9420), (5673, 19457) -> (19304, 19457), (10662, 6016) -> (18992, 6016), (9154, 2478) -> (17129, 2478), (5673, 19457) -> (19304, 19457), (9154, 2478) -> (17129, 2478), (1536, 20976) -> (14591, 20976), (9877, 8368) -> (19277, 8368), (5516, 14243) -> (11448, 14243), (5184, 18549) -> (18924, 18549), (6544, 14630) -> (9489, 14630), (2921, 2278) -> (13787, 2278), (6544, 14630) -> (9489, 14630), (2852, 8128) -> (20123, 8128), (4141, 16975) -> (15611, 16975), (3387, 3762) -> (17386, 3762), (6544, 14630) -> (9489, 14630), (5184, 18549) -> (18924, 18549), (3387, 3762) -> (17386, 3762), (2547, 12628) -> (13795, 12628), (1536, 20976) -> (14591, 20976), (2745, 6620) -> (10311, 6620), (1547, 9420) -> (11331, 9420), (1988, 10307) -> (17334, 10307), (3014, 1579) -> (13040, 1579), (10547, 6281) -> (20106, 6281), (2793, 19081) -> (9414, 19081), (3705, 1787) -> (15690, 1787), (2793, 19081) -> (9414, 19081), (1988, 10307) -> (17334, 10307), (2133, 2005) -> (13805, 2005), (5516, 14243) -> (11448, 14243), (3327, 3666) -> (15545, 3666), (1090, 15840) -> (10781, 15840), (14340, 7807) -> (18031, 7807), (5283, 12647) -> (14696, 12647), (1090, 15840) -> (10781, 15840), (4525, 17925) -> (19136, 17925), (3143, 12095) -> (14002, 12095), (14340, 7807) -> (18031, 7807), (1313, 19055) -> (11742, 19055), (1692, 1258) -> (18881, 1258), (5516, 14243) -> (11448, 14243), (5860, 7391) -> (16862, 7391), (4525, 17925) -> (19136, 17925), (9877, 8368) -> (19277, 8368), (1230, 15680) -> (13285, 15680), (14340, 7807) -> (18031, 7807), (6544, 14630) -> (9489, 14630), (3230, 10334) -> (17913, 10334), (10547, 6281) -> (20106, 6281), (5673, 19457) -> (19304, 19457), (11435, 1969) -> (18303, 1969), (5673, 19457) -> (19304, 19457), (5476, 7123) -> (17024, 7123), (1313, 19055) -> (11742, 19055), (1195, 9004) -> (18673, 9004), (4136, 12046) -> (16302, 12046), (9154, 2478) -> (17129, 2478), (4141, 16975) -> (15611, 16975), (3083, 13661) -> (20095, 13661), (5860, 7391) -> (16862, 7391), (3143, 12095) -> (14002, 12095), (1536, 20976) -> (14591, 20976), (2745, 6620) -> (10311, 6620), (3566, 12570) -> (19409, 12570), (9877, 8368) -> (19277, 8368), (2547, 12628) -> (13795, 12628), (1787, 14638) -> (19827, 14638), (7903, 1061) -> (20959, 1061), (5184, 18549) -> (18924, 18549), (6599, 8243) -> (15341, 8243), (3072, 15953) -> (19079, 15953), (1692, 1258) -> (18881, 1258), (9154, 2478) -> (17129, 2478), (1536, 20976) -> (14591, 20976), (1069, 4178) -> (17128, 4178), (1049, 14118) -> (15022, 14118), (1988, 10307) -> (17334, 10307), (3143, 12095) -> (14002, 12095), (1988, 10307) -> (17334, 10307), (2852, 8128) -> (20123, 8128), (2547, 12628) -> (13795, 12628), (3469, 5013) -> (19121, 5013), (3072, 15953) -> (19079, 15953), (14340, 7807) -> (18031, 7807), (1230, 15680) -> (13285, 15680), (5283, 12647) -> (14696, 12647), (10547, 6281) -> (20106, 6281), (3083, 13661) -> (20095, 13661), (7217, 7013) -> (20274, 7013), (5797, 14770) -> (20303, 14770), (6923, 14049) -> (20447, 14049), (3230, 10334) -> (17913, 10334), (4301, 14436) -> (11808, 14436), (5476, 7123) -> (17024, 7123), (1787, 14638) -> (19827, 14638), (14340, 7807) -> (18031, 7807), (1049, 14118) -> (15022, 14118), (1295, 11057) -> (19110, 11057), (7217, 7013) -> (20274, 7013), (1195, 9004) -> (18673, 9004), (1787, 14638) -> (19827, 14638), (1547, 9420) -> (11331, 9420), (1988, 10307) -> (17334, 10307), (1547, 9420) -> (11331, 9420), (1295, 11057) -> (19110, 11057), (7217, 7013) -> (20274, 7013), (1787, 14638) -> (19827, 14638), (10662, 6016) -> (18992, 6016), (9877, 8368) -> (19277, 8368), (3230, 10334) -> (17913, 10334), (14284, 9681) -> (20739, 9681), (3143, 12095) -> (14002, 12095), (2578, 9830) -> (16543, 9830), (3143, 12095) -> (14002, 12095), (7057, 9808) -> (18361, 9808), (1988, 10307) -> (17334, 10307), (7057, 9808) -> (18361, 9808), (3230, 10334) -> (17913, 10334), (1988, 10307) -> (17334, 10307), (1988, 10307) -> (17334, 10307), (7057, 9808) -> (18361, 9808), (2578, 9830) -> (16543, 9830), (7057, 9808) -> (18361, 9808), (1547, 9420) -> (11331, 9420), (3566, 12570) -> (19409, 12570), (1503, 4944) -> (19165, 4944), (5476, 7123) -> (17024, 7123), (3083, 13661) -> (20095, 13661), (2745, 6620) -> (10311, 6620), (3230, 10334) -> (17913, 10334), (1295, 11057) -> (19110, 11057), (2852, 8128) -> (20123, 8128), (7057, 9808) -> (18361, 9808), (9877, 8368) -> (19277, 8368), (3230, 10334) -> (17913, 10334), (2745, 6620) -> (10311, 6620), (5283, 12647) -> (14696, 12647), (1787, 14638) -> (19827, 14638), (3327, 3666) -> (15545, 3666), (3566, 12570) -> (19409, 12570), (5797, 14770) -> (20303, 14770), (2961, 4669) -> (19655, 4669), (9515, 17047) -> (19974, 17047), (6210, 5834) -> (7378, 5834), (6923, 14049) -> (20447, 14049), (2961, 4669) -> (19655, 4669), (5797, 14770) -> (20303, 14770), (2745, 6620) -> (10311, 6620), (3143, 12095) -> (14002, 12095), (5476, 7123) -> (17024, 7123), (1195, 9004) -> (18673, 9004), (3566, 12570) -> (19409, 12570), (1503, 4944) -> (19165, 4944), (6923, 14049) -> (20447, 14049), (7057, 9808) -> (18361, 9808), (15032, 14175) -> (20785, 14175), (3327, 3666) -> (15545, 3666), (2745, 6620) -> (10311, 6620), (1787, 14638) -> (19827, 14638), (7217, 7013) -> (20274, 7013), (2547, 12628) -> (13795, 12628), (3120, 4019) -> (12634, 4019), (1707, 17944) -> (16032, 17944), (6210, 5834) -> (7378, 5834), (10402, 18306) -> (19234, 18306), (5283, 12647) -> (14696, 12647), (2133, 2005) -> (13805, 2005), (5184, 18549) -> (18924, 18549), (1049, 14118) -> (15022, 14118), (1230, 15680) -> (13285, 15680), (2961, 4669) -> (19655, 4669), (1049, 14118) -> (15022, 14118), (1503, 4944) -> (19165, 4944), (9515, 17047) -> (19974, 17047), (5860, 7391) -> (16862, 7391), (5673, 19457) -> (19304, 19457), (4050, 16819) -> (15932, 16819), (6210, 5834) -> (7378, 5834), (1547, 9420) -> (11331, 9420), (2640, 1835) -> (20679, 1835), (2136, 19721) -> (20381, 19721), (6599, 8243) -> (15341, 8243), (4301, 14436) -> (11808, 14436), (5476, 7123) -> (17024, 7123), (4525, 17925) -> (19136, 17925), (3969, 2697) -> (16938, 2697), (1049, 14118) -> (15022, 14118), (3120, 4019) -> (12634, 4019), (1536, 20976) -> (14591, 20976), (3014, 1579) -> (13040, 1579), (1049, 14118) -> (15022, 14118), (2133, 2005) -> (13805, 2005), (6544, 14630) -> (9489, 14630), (1536, 20976) -> (14591, 20976), (5516, 14243) -> (11448, 14243), (1328, 1862) -> (13080, 1862), (1090, 15840) -> (10781, 15840), (2136, 19721) -> (20381, 19721), (3014, 1579) -> (13040, 1579), (10558, 17358) -> (14928, 17358), (1090, 15840) -> (10781, 15840), (1313, 19055) -> (11742, 19055), (3014, 1579) -> (13040, 1579), (1230, 15680) -> (13285, 15680), (2961, 4669) -> (19655, 4669), (5516, 14243) -> (11448, 14243), (1313, 19055) -> (11742, 19055), (4930, 4633) -> (18510, 4633), (9515, 17047) -> (19974, 17047), (3969, 2697) -> (16938, 2697), (10558, 17358) -> (14928, 17358), (5476, 7123) -> (17024, 7123), (2921, 2278) -> (13787, 2278), (3072, 15953) -> (19079, 15953), (2133, 2005) -> (13805, 2005), (4653, 17637) -> (17831, 17637), (3387, 3762) -> (17386, 3762), (4425, 19374) -> (17080, 19374), (4930, 4633) -> (18510, 4633), (1090, 15840) -> (10781, 15840), (7057, 9808) -> (18361, 9808), (1313, 19055) -> (11742, 19055), (5635, 2248) -> (19921, 2248), (4050, 16819) -> (15932, 16819), (6599, 8243) -> (15341, 8243), (1090, 15840) -> (10781, 15840), (2961, 4669) -> (19655, 4669), (4071, 1321) -> (15633, 1321), (1988, 10307) -> (17334, 10307), (5476, 7123) -> (17024, 7123), (2578, 9830) -> (16543, 9830), (3969, 2697) -> (16938, 2697), (3083, 13661) -> (20095, 13661), (3705, 1787) -> (15690, 1787), (3969, 2697) -> (16938, 2697), (5516, 14243) -> (11448, 14243), (5476, 7123) -> (17024, 7123), (3072, 15953) -> (19079, 15953), (4071, 1321) -> (15633, 1321), (3143, 12095) -> (14002, 12095), (4525, 17925) -> (19136, 17925), (4071, 1321) -> (15633, 1321), (2547, 12628) -> (13795, 12628), (4930, 4633) -> (18510, 4633), (2547, 12628) -> (13795, 12628), (5860, 7391) -> (16862, 7391), (3083, 13661) -> (20095, 13661), (2133, 2005) -> (13805, 2005), (2793, 19081) -> (9414, 19081), (1988, 10307) -> (17334, 10307), (5516, 14243) -> (11448, 14243), (6210, 5834) -> (7378, 5834), (1707, 17944) -> (16032, 17944), (3083, 13661) -> (20095, 13661), (6599, 8243) -> (15341, 8243), (5516, 14243) -> (11448, 14243), (2640, 1835) -> (20679, 1835), (3143, 12095) -> (14002, 12095), (2745, 6620) -> (10311, 6620), (2578, 9830) -> (16543, 9830), (6210, 5834) -> (7378, 5834), (4141, 16975) -> (15611, 16975), (3120, 4019) -> (12634, 4019), (4141, 16975) -> (15611, 16975), (6599, 8243) -> (15341, 8243), (3143, 12095) -> (14002, 12095)]
    - segments() contains the same segment more than once
    - segment 0: (7903, 1061) -> (20959, 1061)
    - segment 2: (7903, 1061) -> (20959, 1061)

    - number of entries in student   solution: 300
    - number of entries in reference solution: 75
    - 228 extra entries in student solution, including:
      '(1536, 20976) -> (14591, 20976)'

    - 3 missing entries in student solution, including:
      '(10027, 20618) -> (13055, 20618) -> (15225, 20618) -> (20029, 20618)'


  * filename = horizontal100.txt
[(1090, 1279) -> (13975, 1279), (1085, 17159) -> (20028, 17159), (1145, 5298) -> (11194, 5298), (1524, 2377) -> (15620, 2377), (1085, 17159) -> (20028, 17159), (1238, 6140) -> (11759, 6140), (1457, 3126) -> (11549, 3126), (1384, 5505) -> (18355, 5505), (1524, 2377) -> (15620, 2377), (1173, 6889) -> (19585, 6889), (2283, 1877) -> (20689, 1877), (2089, 5368) -> (20729, 5368), (1457, 3126) -> (11549, 3126), (1085, 17159) -> (20028, 17159), (1238, 6140) -> (11759, 6140), (3341, 1321) -> (15533, 1321), (2928, 5262) -> (9016, 5262), (1329, 15556) -> (18994, 15556), (2777, 3186) -> (7438, 3186), (1666, 10130) -> (18129, 10130), (4339, 2922) -> (14108, 2922), (3334, 12013) -> (11447, 12013), (5311, 3227) -> (17189, 3227), (1157, 13507) -> (10552, 13507), (2068, 3814) -> (15795, 3814), (1329, 15556) -> (18994, 15556), (3288, 5270) -> (18953, 5270), (3456, 19925) -> (20453, 19925), (1400, 5883) -> (17733, 5883), (2828, 15500) -> (13277, 15500), (3933, 11459) -> (16774, 11459), (1090, 1279) -> (13975, 1279), (6352, 9135) -> (20523, 9135), (2689, 13933) -> (11884, 13933), (1090, 1279) -> (13975, 1279), (3881, 15773) -> (20547, 15773), (3908, 5563) -> (19963, 5563), (1914, 14462) -> (18212, 14462), (5311, 3227) -> (17189, 3227), (1914, 14462) -> (18212, 14462), (5119, 17293) -> (17042, 17293), (1914, 14462) -> (18212, 14462), (3462, 5453) -> (10282, 5453), (4609, 17059) -> (12198, 17059), (3908, 5563) -> (19963, 5563), (4339, 2922) -> (14108, 2922), (4609, 17059) -> (12198, 17059), (7521, 2491) -> (17928, 2491), (5221, 16284) -> (15503, 16284), (2053, 2907) -> (20360, 2907), (6823, 15428) -> (18961, 15428), (4596, 7963) -> (20814, 7963), (5119, 17293) -> (17042, 17293), (3341, 1321) -> (15533, 1321), (5764, 13634) -> (13774, 13634), (1090, 1279) -> (13975, 1279), (3933, 11459) -> (16774, 11459), (1524, 2377) -> (15620, 2377), (8858, 18806) -> (17903, 18806), (1384, 5505) -> (18355, 5505), (2656, 14586) -> (11599, 14586), (2068, 3814) -> (15795, 3814), (6508, 9178) -> (20346, 9178), (2638, 20488) -> (14637, 20488), (5507, 7934) -> (14353, 7934), (7521, 2491) -> (17928, 2491), (1329, 15556) -> (18994, 15556), (7521, 2491) -> (17928, 2491), (4361, 14461) -> (11740, 14461), (10441, 5730) -> (19100, 5730), (4609, 17059) -> (12198, 17059), (6937, 13076) -> (18603, 13076), (3658, 6338) -> (11043, 6338), (6937, 13076) -> (18603, 13076), (12584, 3956) -> (17835, 3956), (6352, 9135) -> (20523, 9135), (1238, 6140) -> (11759, 6140), (3401, 7315) -> (19919, 7315), (3933, 11459) -> (16774, 11459), (1238, 6140) -> (11759, 6140), (3334, 12013) -> (11447, 12013), (2068, 3814) -> (15795, 3814), (5221, 16284) -> (15503, 16284), (6352, 9135) -> (20523, 9135), (3341, 1321) -> (15533, 1321), (6017, 7946) -> (15401, 7946), (3401, 7315) -> (19919, 7315), (7248, 13632) -> (16054, 13632), (6443, 8379) -> (19201, 8379), (4166, 6909) -> (15997, 6909), (2038, 19155) -> (18305, 19155), (3462, 5453) -> (10282, 5453), (2150, 13453) -> (20049, 13453), (6352, 9135) -> (20523, 9135), (3341, 1321) -> (15533, 1321), (1384, 5505) -> (18355, 5505), (3933, 11459) -> (16774, 11459), (1781, 18394) -> (14390, 18394), (7521, 2491) -> (17928, 2491), (2150, 13453) -> (20049, 13453), (1238, 6140) -> (11759, 6140), (1524, 2377) -> (15620, 2377), (5675, 16225) -> (20343, 16225), (1192, 14330) -> (15142, 14330), (4609, 17059) -> (12198, 17059), (1324, 9290) -> (20609, 9290), (2689, 13933) -> (11884, 13933), (1384, 5505) -> (18355, 5505), (4237, 15261) -> (18392, 15261), (4596, 7963) -> (20814, 7963), (1324, 9290) -> (20609, 9290), (2068, 3814) -> (15795, 3814), (5221, 16284) -> (15503, 16284), (2089, 5368) -> (20729, 5368), (5764, 13634) -> (13774, 13634), (4958, 8585) -> (13573, 8585), (6355, 3883) -> (17874, 3883), (4609, 17059) -> (12198, 17059), (3401, 7315) -> (19919, 7315), (2150, 13453) -> (20049, 13453), (5311, 3227) -> (17189, 3227), (4609, 17059) -> (12198, 17059), (8850, 3115) -> (20255, 3115), (4361, 14461) -> (11740, 14461), (12584, 3956) -> (17835, 3956), (2828, 15500) -> (13277, 15500), (12584, 3956) -> (17835, 3956), (7248, 13632) -> (16054, 13632), (8850, 3115) -> (20255, 3115), (9219, 12701) -> (19227, 12701), (6508, 9178) -> (20346, 9178), (3881, 15773) -> (20547, 15773), (6355, 3883) -> (17874, 3883), (5764, 13634) -> (13774, 13634), (1173, 6889) -> (19585, 6889), (3933, 11459) -> (16774, 11459), (2089, 5368) -> (20729, 5368), (5505, 16784) -> (12187, 16784), (10297, 4430) -> (20296, 4430), (3148, 16761) -> (19412, 16761), (1329, 15556) -> (18994, 15556), (12584, 3956) -> (17835, 3956), (1329, 15556) -> (18994, 15556), (2882, 8611) -> (12721, 8611), (1192, 14330) -> (15142, 14330), (3401, 7315) -> (19919, 7315), (4596, 7963) -> (20814, 7963), (3619, 5538) -> (15549, 5538), (2656, 14586) -> (11599, 14586), (1324, 9290) -> (20609, 9290), (1173, 6889) -> (19585, 6889), (1157, 13507) -> (10552, 13507), (2882, 8611) -> (12721, 8611), (3908, 5563) -> (19963, 5563), (1157, 13507) -> (10552, 13507), (6443, 8379) -> (19201, 8379), (5764, 13634) -> (13774, 13634), (1905, 10232) -> (14147, 10232), (6508, 9178) -> (20346, 9178), (6937, 13076) -> (18603, 13076), (3933, 11459) -> (16774, 11459), (3635, 9886) -> (19282, 9886), (6508, 9178) -> (20346, 9178), (1192, 14330) -> (15142, 14330), (6586, 8650) -> (11386, 8650), (3798, 10339) -> (20409, 10339), (1324, 9290) -> (20609, 9290), (3798, 10339) -> (20409, 10339), (6017, 7946) -> (15401, 7946), (1672, 13404) -> (19787, 13404), (1400, 5883) -> (17733, 5883), (2150, 13453) -> (20049, 13453), (3908, 5563) -> (19963, 5563), (4361, 14461) -> (11740, 14461), (2051, 6123) -> (20715, 6123), (4237, 15261) -> (18392, 15261), (9219, 12701) -> (19227, 12701), (1192, 14330) -> (15142, 14330), (3288, 5270) -> (18953, 5270), (6508, 9178) -> (20346, 9178), (1666, 10130) -> (18129, 10130), (6352, 9135) -> (20523, 9135), (6508, 9178) -> (20346, 9178), (3933, 11459) -> (16774, 11459), (3933, 11459) -> (16774, 11459), (1630, 11385) -> (14915, 11385), (3933, 11459) -> (16774, 11459), (2479, 12111) -> (18174, 12111), (1608, 9347) -> (18396, 9347), (5272, 9898) -> (15848, 9898), (3798, 10339) -> (20409, 10339), (3798, 10339) -> (20409, 10339), (1905, 10232) -> (14147, 10232), (3798, 10339) -> (20409, 10339), (4461, 10272) -> (16147, 10272), (3635, 9886) -> (19282, 9886), (4461, 10272) -> (16147, 10272), (1666, 10130) -> (18129, 10130), (5272, 9898) -> (15848, 9898), (6352, 9135) -> (20523, 9135), (3635, 9886) -> (19282, 9886), (1666, 10130) -> (18129, 10130), (3798, 10339) -> (20409, 10339), (3933, 11459) -> (16774, 11459), (6352, 9135) -> (20523, 9135), (3798, 10339) -> (20409, 10339), (5272, 9898) -> (15848, 9898), (1608, 9347) -> (18396, 9347), (9791, 12721) -> (18910, 12721), (6937, 13076) -> (18603, 13076), (5272, 9898) -> (15848, 9898), (9219, 12701) -> (19227, 12701), (4109, 7659) -> (16981, 7659), (2479, 12111) -> (18174, 12111), (6352, 9135) -> (20523, 9135), (1630, 11385) -> (14915, 11385), (6586, 8650) -> (11386, 8650), (9219, 12701) -> (19227, 12701), (6017, 7946) -> (15401, 7946), (5272, 9898) -> (15848, 9898), (2150, 13453) -> (20049, 13453), (5272, 9898) -> (15848, 9898), (1400, 5883) -> (17733, 5883), (3933, 11459) -> (16774, 11459), (6823, 15428) -> (18961, 15428), (4109, 7659) -> (16981, 7659), (11278, 13752) -> (19141, 13752), (1145, 5298) -> (11194, 5298), (8675, 18688) -> (19847, 18688), (3334, 12013) -> (11447, 12013), (4109, 7659) -> (16981, 7659), (1085, 17159) -> (20028, 17159), (6017, 7946) -> (15401, 7946), (9791, 12721) -> (18910, 12721), (6017, 7946) -> (15401, 7946), (2150, 13453) -> (20049, 13453), (2882, 8611) -> (12721, 8611), (1145, 5298) -> (11194, 5298), (9219, 12701) -> (19227, 12701), (13394, 14170) -> (19946, 14170), (4109, 7659) -> (16981, 7659), (16448, 18630) -> (20990, 18630), (3619, 5538) -> (15549, 5538), (9791, 12721) -> (18910, 12721), (3288, 5270) -> (18953, 5270), (1914, 14462) -> (18212, 14462), (5675, 16225) -> (20343, 16225), (5119, 17293) -> (17042, 17293), (3288, 5270) -> (18953, 5270), (2038, 19155) -> (18305, 19155), (1457, 3126) -> (11549, 3126), (9219, 12701) -> (19227, 12701), (6823, 15428) -> (18961, 15428), (9219, 12701) -> (19227, 12701), (3456, 19925) -> (20453, 19925), (16448, 18630) -> (20990, 18630), (3288, 5270) -> (18953, 5270), (6823, 15428) -> (18961, 15428), (1524, 2377) -> (15620, 2377), (5675, 16225) -> (20343, 16225), (5835, 20698) -> (19642, 20698), (1400, 5883) -> (17733, 5883), (3456, 19925) -> (20453, 19925), (4461, 10272) -> (16147, 10272), (1457, 3126) -> (11549, 3126), (5835, 20698) -> (19642, 20698), (9791, 12721) -> (18910, 12721), (4109, 7659) -> (16981, 7659), (9219, 12701) -> (19227, 12701), (4109, 7659) -> (16981, 7659), (9791, 12721) -> (18910, 12721), (1239, 4848) -> (12319, 4848), (9219, 12701) -> (19227, 12701), (5272, 9898) -> (15848, 9898), (8858, 18806) -> (17903, 18806), (5675, 16225) -> (20343, 16225), (3334, 12013) -> (11447, 12013), (5119, 17293) -> (17042, 17293), (2777, 3186) -> (7438, 3186), (3334, 12013) -> (11447, 12013), (6795, 18675) -> (18393, 18675), (4596, 7963) -> (20814, 7963), (3148, 16761) -> (19412, 16761), (5311, 3227) -> (17189, 3227), (5119, 17293) -> (17042, 17293), (5311, 3227) -> (17189, 3227), (13675, 19101) -> (18429, 19101), (4596, 7963) -> (20814, 7963), (2479, 12111) -> (18174, 12111), (2777, 3186) -> (7438, 3186), (1324, 9290) -> (20609, 9290), (3456, 19925) -> (20453, 19925), (1400, 5883) -> (17733, 5883), (3881, 15773) -> (20547, 15773), (6355, 3883) -> (17874, 3883), (3401, 7315) -> (19919, 7315), (1329, 15556) -> (18994, 15556), (2777, 3186) -> (7438, 3186), (11278, 13752) -> (19141, 13752), (2928, 5262) -> (9016, 5262), (9581, 17217) -> (17442, 17217), (2777, 3186) -> (7438, 3186), (6508, 9178) -> (20346, 9178), (6355, 3883) -> (17874, 3883), (2928, 5262) -> (9016, 5262), (13394, 14170) -> (19946, 14170), (4596, 7963) -> (20814, 7963), (6795, 18675) -> (18393, 18675), (1524, 2377) -> (15620, 2377), (4958, 8585) -> (13573, 8585), (3462, 5453) -> (10282, 5453), (11278, 13752) -> (19141, 13752), (3908, 5563) -> (19963, 5563), (2038, 19155) -> (18305, 19155), (2051, 6123) -> (20715, 6123), (9581, 17217) -> (17442, 17217), (2479, 12111) -> (18174, 12111), (3462, 5453) -> (10282, 5453), (6795, 18675) -> (18393, 18675), (4461, 10272) -> (16147, 10272), (2777, 3186) -> (7438, 3186), (5272, 9898) -> (15848, 9898), (5221, 16284) -> (15503, 16284), (5507, 7934) -> (14353, 7934), (13675, 19101) -> (18429, 19101), (5311, 3227) -> (17189, 3227), (5764, 13634) -> (13774, 13634), (2777, 3186) -> (7438, 3186), (7248, 13632) -> (16054, 13632), (1457, 3126) -> (11549, 3126), (9219, 12701) -> (19227, 12701), (1781, 18394) -> (14390, 18394), (7521, 2491) -> (17928, 2491), (6586, 8650) -> (11386, 8650), (8675, 18688) -> (19847, 18688), (3341, 1321) -> (15533, 1321), (6937, 13076) -> (18603, 13076), (4596, 7963) -> (20814, 7963), (11665, 18921) -> (15546, 18921), (1384, 5505) -> (18355, 5505), (3341, 1321) -> (15533, 1321), (5311, 3227) -> (17189, 3227), (5272, 9898) -> (15848, 9898), (6355, 3883) -> (17874, 3883), (6937, 13076) -> (18603, 13076), (3658, 6338) -> (11043, 6338), (6937, 13076) -> (18603, 13076), (1090, 1279) -> (13975, 1279), (5675, 16225) -> (20343, 16225), (3658, 6338) -> (11043, 6338), (4237, 15261) -> (18392, 15261), (5311, 3227) -> (17189, 3227), (7248, 13632) -> (16054, 13632), (8850, 3115) -> (20255, 3115), (9581, 17217) -> (17442, 17217), (4339, 2922) -> (14108, 2922), (7248, 13632) -> (16054, 13632), (2638, 20488) -> (14637, 20488), (2051, 6123) -> (20715, 6123), (4237, 15261) -> (18392, 15261), (6443, 8379) -> (19201, 8379), (2051, 6123) -> (20715, 6123), (4237, 15261) -> (18392, 15261), (6937, 13076) -> (18603, 13076), (2051, 6123) -> (20715, 6123), (2638, 20488) -> (14637, 20488), (3401, 7315) -> (19919, 7315), (2828, 15500) -> (13277, 15500), (6586, 8650) -> (11386, 8650), (10297, 4430) -> (20296, 4430), (5272, 9898) -> (15848, 9898), (2051, 6123) -> (20715, 6123), (5505, 16784) -> (12187, 16784), (10297, 4430) -> (20296, 4430), (4609, 17059) -> (12198, 17059), (6443, 8379) -> (19201, 8379), (2051, 6123) -> (20715, 6123), (6508, 9178) -> (20346, 9178), (1384, 5505) -> (18355, 5505), (4361, 14461) -> (11740, 14461), (2053, 2907) -> (20360, 2907), (11278, 13752) -> (19141, 13752), (10441, 5730) -> (19100, 5730), (10297, 4430) -> (20296, 4430), (10441, 5730) -> (19100, 5730), (11278, 13752) -> (19141, 13752), (6508, 9178) -> (20346, 9178), (10441, 5730) -> (19100, 5730), (6377, 14789) -> (11163, 14789), (2051, 6123) -> (20715, 6123), (9219, 12701) -> (19227, 12701), (10297, 4430) -> (20296, 4430), (9791, 12721) -> (18910, 12721), (5221, 16284) -> (15503, 16284), (9791, 12721) -> (18910, 12721), (4596, 7963) -> (20814, 7963), (9791, 12721) -> (18910, 12721), (4609, 17059) -> (12198, 17059), (5221, 16284) -> (15503, 16284), (2053, 2907) -> (20360, 2907)]
    - segments() contains the same segment more than once
    - segment 1: (1085, 17159) -> (20028, 17159)
    - segment 4: (1085, 17159) -> (20028, 17159)

    - number of entries in student   solution: 400
    - number of entries in reference solution: 100
    - 306 extra entries in student solution, including:
      '(5835, 20698) -> (19642, 20698)'

    - 6 missing entries in student solution, including:
      '(5640, 20636) -> (10242, 20636) -> (13207, 20636) -> (20063, 20636)'


==> FAILED

Test 2b: random horizontal line segments
  *  1 random horizontal line segment
[(1556, 15971) -> (19347, 15971), (1556, 15971) -> (19347, 15971), (1556, 15971) -> (19347, 15971), (1556, 15971) -> (19347, 15971)]
    - segments() contains the same segment more than once
    - segment 0: (1556, 15971) -> (19347, 15971)
    - segment 1: (1556, 15971) -> (19347, 15971)

    - number of entries in student   solution: 4
    - number of entries in reference solution: 1
    - 3 extra entries in student solution, including:
      '(1556, 15971) -> (19347, 15971)'


    - failed on trial 1 of 500
     4
      1556 15971
     17544 15971
     19347 15971
     15186 15971

  *  5 random horizontal line segments
[(8607, 2357) -> (14417, 2357), (7089, 10442) -> (18881, 10442), (8607, 2357) -> (14417, 2357), (3589, 15880) -> (20759, 15880), (7089, 10442) -> (18881, 10442), (3589, 15880) -> (20759, 15880), (8607, 2357) -> (14417, 2357), (7089, 10442) -> (18881, 10442), (8607, 2357) -> (14417, 2357), (2021, 3976) -> (11820, 3976), (2021, 3976) -> (11820, 3976), (3589, 15880) -> (20759, 15880), (14032, 14377) -> (18675, 14377), (3589, 15880) -> (20759, 15880), (8607, 2357) -> (14417, 2357), (14032, 14377) -> (18675, 14377), (2021, 3976) -> (11820, 3976), (14032, 14377) -> (18675, 14377), (8607, 2357) -> (14417, 2357), (14032, 14377) -> (18675, 14377)]
    - segments() contains the same segment more than once
    - segment 0: (8607, 2357) -> (14417, 2357)
    - segment 2: (8607, 2357) -> (14417, 2357)

    - number of entries in student   solution: 20
    - number of entries in reference solution: 5
    - 15 extra entries in student solution, including:
      '(3589, 15880) -> (20759, 15880)'


    - failed on trial 1 of 250
     20
      2021  3976
      8607  2357
      3589 15880
     14417  2357
     14032 14377
     18881 10442
     18272 14377
     12992  2357
     20759 15880
     11560 15880
      7547  3976
     18423 14377
      4790 15880
      2867  3976
     11820  3976
     18675 14377
     12113 10442
      9362 10442
     12230  2357
      7089 10442

  * 10 random horizontal line segments
[(3127, 2547) -> (18226, 2547), (3002, 20902) -> (17861, 20902), (5202, 5032) -> (14857, 5032), (3002, 20902) -> (17861, 20902), (4515, 10364) -> (11860, 10364), (5202, 5032) -> (14857, 5032), (3002, 20902) -> (17861, 20902), (7360, 7268) -> (19309, 7268), (4515, 10364) -> (11860, 10364), (8132, 6936) -> (20636, 6936), (3127, 2547) -> (18226, 2547), (5202, 5032) -> (14857, 5032), (3002, 20902) -> (17861, 20902), (3127, 2547) -> (18226, 2547), (4515, 10364) -> (11860, 10364), (8132, 6936) -> (20636, 6936), (3299, 18773) -> (12635, 18773), (7360, 7268) -> (19309, 7268), (4515, 10364) -> (11860, 10364), (4515, 10364) -> (11860, 10364), (8132, 6936) -> (20636, 6936), (4515, 10364) -> (11860, 10364), (4515, 10364) -> (11860, 10364), (6420, 17187) -> (18609, 17187), (3127, 2547) -> (18226, 2547), (5736, 14433) -> (18448, 14433), (4515, 10364) -> (11860, 10364), (6420, 17187) -> (18609, 17187), (8132, 6936) -> (20636, 6936), (6420, 17187) -> (18609, 17187), (7360, 7268) -> (19309, 7268), (5736, 14433) -> (18448, 14433), (3127, 2547) -> (18226, 2547), (3002, 20902) -> (17861, 20902), (7360, 7268) -> (19309, 7268), (3002, 20902) -> (17861, 20902), (3127, 2547) -> (18226, 2547), (7360, 7268) -> (19309, 7268), (6420, 17187) -> (18609, 17187), (7360, 7268) -> (19309, 7268)]
    - segments() contains the same segment more than once
    - segment 1: (3002, 20902) -> (17861, 20902)
    - segment 3: (3002, 20902) -> (17861, 20902)

    - number of entries in student   solution: 40
    - number of entries in reference solution: 10
    - 31 extra entries in student solution, including:
      '(3002, 20902) -> (17861, 20902)'

    - 1 missing entry in student solution:
      '(7560, 13297) -> (10552, 13297) -> (15237, 13297) -> (16789, 13297)'


    - failed on trial 1 of 50

  * 15 random horizontal line segments
[(1403, 1091) -> (18258, 1091), (1297, 19322) -> (5413, 19322), (1634, 5910) -> (8640, 5910), (1016, 20368) -> (16541, 20368), (1403, 1091) -> (18258, 1091), (2975, 7195) -> (18229, 7195), (1016, 20368) -> (16541, 20368), (3542, 10839) -> (13846, 10839), (1634, 5910) -> (8640, 5910), (3754, 11795) -> (19755, 11795), (1634, 5910) -> (8640, 5910), (1016, 20368) -> (16541, 20368), (3754, 11795) -> (19755, 11795), (1403, 1091) -> (18258, 1091), (6762, 16613) -> (18055, 16613), (9386, 13830) -> (18003, 13830), (1297, 19322) -> (5413, 19322), (4132, 12030) -> (19245, 12030), (6762, 16613) -> (18055, 16613), (3542, 10839) -> (13846, 10839), (2727, 18612) -> (11475, 18612), (4132, 12030) -> (19245, 12030), (4738, 7579) -> (18323, 7579), (3542, 10839) -> (13846, 10839), (3361, 16434) -> (11982, 16434), (3754, 11795) -> (19755, 11795), (3361, 16434) -> (11982, 16434), (4132, 12030) -> (19245, 12030), (9386, 13830) -> (18003, 13830), (9386, 13830) -> (18003, 13830), (9386, 13830) -> (18003, 13830), (4132, 12030) -> (19245, 12030), (12234, 15438) -> (20839, 15438), (4132, 12030) -> (19245, 12030), (3754, 11795) -> (19755, 11795), (12234, 15438) -> (20839, 15438), (4132, 12030) -> (19245, 12030), (12234, 15438) -> (20839, 15438), (3542, 10839) -> (13846, 10839), (12234, 15438) -> (20839, 15438), (2975, 7195) -> (18229, 7195), (3361, 16434) -> (11982, 16434), (1016, 20368) -> (16541, 20368), (2975, 7195) -> (18229, 7195), (1403, 1091) -> (18258, 1091), (2975, 7195) -> (18229, 7195), (6762, 16613) -> (18055, 16613), (3754, 11795) -> (19755, 11795), (2727, 18612) -> (11475, 18612), (1634, 5910) -> (8640, 5910), (3754, 11795) -> (19755, 11795), (1403, 1091) -> (18258, 1091), (1016, 20368) -> (16541, 20368), (3754, 11795) -> (19755, 11795), (1016, 20368) -> (16541, 20368), (4132, 12030) -> (19245, 12030), (1297, 19322) -> (5413, 19322), (3042, 3044) -> (16945, 3044), (3361, 16434) -> (11982, 16434), (3042, 3044) -> (16945, 3044)]
    - segments() contains the same segment more than once
    - segment 0: (1403, 1091) -> (18258, 1091)
    - segment 4: (1403, 1091) -> (18258, 1091)

    - number of entries in student   solution: 60
    - number of entries in reference solution: 15
    - 45 extra entries in student solution, including:
      '(1016, 20368) -> (16541, 20368)'


    - failed on trial 1 of 5

==> FAILED

Test 3a: points from a file with vertical line segments
  * filename = vertical5.txt
[(8421, 1829) -> (8421, 18715), (5757, 3426) -> (5757, 20856), (8421, 1829) -> (8421, 18715), (15976, 3370) -> (15976, 9945), (14407, 10367) -> (14407, 19953), (15976, 3370) -> (15976, 9945), (14407, 10367) -> (14407, 19953), (5757, 3426) -> (5757, 20856), (8421, 1829) -> (8421, 18715), (14407, 10367) -> (14407, 19953), (5757, 3426) -> (5757, 20856), (2088, 6070) -> (2088, 16387), (8421, 1829) -> (8421, 18715), (14407, 10367) -> (14407, 19953), (8421, 1829) -> (8421, 18715), (14407, 10367) -> (14407, 19953), (8421, 1829) -> (8421, 18715), (8421, 1829) -> (8421, 18715), (8421, 1829) -> (8421, 18715), (8421, 1829) -> (8421, 18715)]
    - segments() contains the same segment more than once
    - segment 0: (8421, 1829) -> (8421, 18715)
    - segment 2: (8421, 1829) -> (8421, 18715)

    - number of entries in student   solution: 20
    - number of entries in reference solution: 5
    - 15 extra entries in student solution, including:
      '(14407, 10367) -> (14407, 19953)'


  * filename = vertical25.txt
[(9557, 1388) -> (9557, 20238), (9200, 4869) -> (9200, 18544), (9557, 1388) -> (9557, 20238), (11585, 4132) -> (11585, 12912), (9200, 4869) -> (9200, 18544), (13033, 2366) -> (13033, 18486), (9200, 4869) -> (9200, 18544), (11585, 4132) -> (11585, 12912), (7342, 1787) -> (7342, 19787), (13033, 2366) -> (13033, 18486), (7306, 2984) -> (7306, 19263), (11585, 4132) -> (11585, 12912), (13033, 2366) -> (13033, 18486), (4184, 2462) -> (4184, 19471), (7674, 9568) -> (7674, 18802), (2775, 3833) -> (2775, 17839), (1825, 2431) -> (1825, 19680), (2775, 3833) -> (2775, 17839), (6137, 2154) -> (6137, 10058), (11585, 4132) -> (11585, 12912), (2775, 3833) -> (2775, 17839), (6137, 2154) -> (6137, 10058), (17619, 1701) -> (17619, 20231), (9557, 1388) -> (9557, 20238), (15885, 1497) -> (15885, 16389), (9200, 4869) -> (9200, 18544), (13536, 9107) -> (13536, 20946), (1533, 6056) -> (1533, 20198), (1825, 2431) -> (1825, 19680), (5979, 3124) -> (5979, 15131), (17619, 1701) -> (17619, 20231), (11585, 4132) -> (11585, 12912), (19964, 1476) -> (19964, 7659), (7674, 9568) -> (7674, 18802), (15411, 8971) -> (15411, 19190), (2775, 3833) -> (2775, 17839), (19964, 1476) -> (19964, 7659), (15826, 7745) -> (15826, 18319), (13536, 9107) -> (13536, 20946), (15411, 8971) -> (15411, 19190), (7674, 9568) -> (7674, 18802), (19953, 10489) -> (19953, 20439), (2775, 383

...

WARNING: the grading output was truncated due to excessive length.
Typically, this is because you have a method that has an unanticipated side effect
(such as printing to standard output or throwing an exception). A large amount of output
can also arise from failing many tests.